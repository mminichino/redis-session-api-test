apiVersion: v1
kind: Namespace
metadata:
  name: session-api
  labels:
    name: session-api
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: session-api-config
  namespace: session-api
data:
  REDIS_HOST: "$REDIS_HOST"
  REDIS_PORT: "$REDIS_PORT"
  REDIS_DATABASE: "0"
  SPRING_PROFILES_ACTIVE: "kubernetes"
  JAVA_OPTS: "-Xmx512m -Xms256m -Dspring.profiles.active=kubernetes"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: session-api
  labels:
    app: redis
type: Opaque
data:
  redis-password: $REDIS_PASSWORD
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: session-api
  namespace: session-api
  labels:
    app: session-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: session-api
  template:
    metadata:
      labels:
        app: session-api
    spec:
      containers:
        - name: session-api
          image: ${DOCKER_REGISTRY}/redis-session-api-test:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: session-api-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: session-api-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
            - name: REDIS_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: session-api-config
                  key: REDIS_DATABASE
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: session-api-config
                  key: JAVA_OPTS
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: session-api-loadbalancer
  namespace: session-api
  labels:
    app: session-api
    service-type: loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: session-api
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: https
      port: 443
      targetPort: 8443
      protocol: TCP
  sessionAffinity: None
  externalTrafficPolicy: Cluster
